load("@aspect_rules_js//js:defs.bzl", "js_library", "js_test")
load("@aspect_rules_swc//swc:defs.bzl", "swc")
load("@aspect_rules_ts//ts:defs.bzl", "ts_config", "ts_project")
load("@aspect_rules_webpack//webpack:defs.bzl", "webpack_bundle")
load("@bazel_skylib//lib:partial.bzl", "partial")

package(default_visibility = ["//visibility:public"])

# TypeScript configuration
ts_config(
    name = "tsconfig",
    src = "tsconfig.json",
)

# Core JavaScript/TypeScript library
ts_project(
    name = "webapp_lib",
    srcs = glob([
        "src/**/*.jsx",
        "src/**/*.ts",
        "src/**/*.tsx",
    ]),
    allow_js = True,
    declaration = False,
    no_emit = False,
    resolve_json_module = True,
    transpiler = partial.make(
        swc,
        swcrc = "//demo/webapp:.swcrc",
    ),
    tsconfig = ":tsconfig",
    deps = [
        "//:node_modules/@types/react",
        "//:node_modules/@types/react-dom",
        "//:node_modules/@types/react-intl",
        "//:node_modules/@types/react-redux",
        "//:node_modules/@types/react-router-dom",
        "//:node_modules/core-js",
        "//:node_modules/mattermost-redux",
        "//:node_modules/prop-types",
        "//:node_modules/react",
        "//:node_modules/react-intl",
        "//:node_modules/react-redux",
        "//:node_modules/react-router-dom",
        "//:node_modules/redux",
        "//:node_modules/tslib",
        "//:node_modules/typescript",
        "//demo:plugin",
    ],
)

# Plain JavaScript files
js_library(
    name = "webapp_js",
    srcs = glob(["src/**/*.js"]),
)

# Internationalization files
js_library(
    name = "i18n",
    srcs = glob(["src/i18n/*.json"]),
)

# Babel configuration
js_library(
    name = "babel_config",
    srcs = ["babel.config.js"],
)

# Webpack bundle for production
webpack_bundle(
    name = "webapp_bundle",
    srcs = [
        "webpack.config.js",
        ":babel_config",
        ":i18n",
        ":webapp_js",
        ":webapp_lib",
        "//demo:plugin",
    ],
    entry_point = "src/index.js",
    node_modules = "//:node_modules",
    output_dir = True,
)

# Test configuration
js_library(
    name = "test_config",
    srcs = [
        "jest.config.js",
    ] + glob(["tests/**/*.js"]),
    deps = [
        "//:node_modules/@types/enzyme",
        "//:node_modules/@types/jest",
        "//:node_modules/enzyme",
        "//:node_modules/enzyme-adapter-react-16",
        "//:node_modules/jest",
    ],
)

# Package.json as data
js_library(
    name = "package_json",
    deps = ["//:package_json"],
)

# All webapp targets
filegroup(
    name = "all_webapp",
    srcs = [
        ":i18n",
        ":webapp_bundle",
        ":webapp_js",
        ":webapp_lib",
    ],
)
